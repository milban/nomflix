{"version":3,"sources":["Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","process","language","tvApi","topRated","get","airingToday","showDetail","append_to_response","search","term","query","encodeURIComponent","movieApi","movieDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","beforeTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Content","Cover","bgImage","Data","h3","ItemContainer","Item","Divider","Overview","p","Backdrop","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","idx","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","SHeader","header","List","ul","li","current","SLink","Link","withRouter","Header","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa5ab021.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  margin-bottom: 30px;\n  &:first-child {\n    padding-top: 30px;\n  }\n`\n\nconst Title = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n`\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 15px;\n`\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n)\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n}\n\nexport default Section\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 100px;\n`\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: flex-start;\n  margin: 1rem 0rem;\n`\n\nconst Text = styled.span`\n  color: ${props => props.color};\n  font-weight: 600;\n`\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n)\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n}\n\nexport default Message\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  font-size: 12px;\n`\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : \"http://www.etyellowpages.com/images/cinema/NoPoster.jpg\"\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n)\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n}\nexport default Poster\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"../../Components/Poster\"\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Up Coming\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date}\n                isMovie={true}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\"></Message>}\n      </Container>\n    )}\n  </>\n)\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default HomePresenter\n","import axios from \"axios\"\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: process.env.REACT_APP_MOVIE_API_KEY,\n    language: \"en-US\"\n  }\n})\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n}\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n}\n","import HomeContainer from \"./HomeContainer\"\n\nexport default HomeContainer\n","import React from \"react\"\nimport HomePresenter from \"./HomePresenter\"\nimport { movieApi } from \"api\"\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying()\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming()\n      const {\n        data: { results: popular }\n      } = await movieApi.popular()\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      ></HomePresenter>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\"\nimport Loader from \"Components/Loader\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader></Loader>\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n                isMovie={false}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n                isMovie={false}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date}\n                isMovie={false}\n              ></Poster>\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\"></Message>}\n      </Container>\n    )}\n  </>\n)\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default TVPresenter\n","import TVContainer from \"./TVContainer\"\n\nexport default TVContainer\n","import React from \"react\"\nimport TVPresenter from \"./TVPresenter\"\nimport { tvApi } from \"api\"\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  }\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated()\n      const {\n        data: { results: popular }\n      } = await tvApi.popular()\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday()\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      })\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      ></TVPresenter>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Loader from \"Components/Loader\"\nimport Section from \"Components/Section\"\nimport Message from \"Components/Message\"\nimport Poster from \"Components/Poster\"\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`\n\nconst Form = styled.form`\n  padding-top: 20px;\n  margin-bottom: 50px;\n  width: 100%;\n`\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  beforeTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          ></Input>\n        </Form>\n        {loading ? (\n          <Loader></Loader>\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie, key) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date}\n                    isMovie={true}\n                  ></Poster>\n                ))}\n              </Section>\n            )}\n            {movieResults && movieResults.length === 0 && (\n              <Message text={`Movie: Nothing found for ${beforeTerm}`} color=\"#dfe6e9\" />\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"Show Results\">\n                {tvResults.map((show, key) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    imageUrl={show.poster_path}\n                    title={show.original_name}\n                    rating={show.vote_average}\n                    year={show.first_air_date}\n                    isMovie={false}\n                  ></Poster>\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length === 0 && (\n              <Message text={`TV Shows: Nothing found for ${beforeTerm}`} color=\"#dfe6e9\" />\n            )}\n            {error && <Message text={error} color=\"#e74c3c\"></Message>}\n          </>\n        )}\n      </Container>\n    }\n  </>\n)\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  beforeTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter\n","import SearchContainer from \"./SearchContainer\"\n\nexport default SearchContainer\n","import React from \"react\"\nimport SearchPresenter from \"./SearchPresenter\"\nimport { movieApi, tvApi } from \"../../api\"\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    beforeTerm: \"\",\n    error: null,\n    loading: false\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n    const { searchTerm } = this.state\n    if (searchTerm !== \"\") {\n      this.searchByTerm()\n    }\n  }\n\n  updateTerm = event => {\n    const {\n      target: { value: searchTerm }\n    } = event\n    this.setState({\n      searchTerm\n    })\n  }\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state\n    this.setState({ loading: true })\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm)\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm)\n\n      this.setState({ movieResults, tvResults, beforeTerm: searchTerm })\n    } catch {\n      this.setState({ error: \"Can't find searching result\" })\n    } finally {\n      this.setState({ loading: false })\n    }\n  }\n\n  render() {\n    const { movieResults, tvResults, searchTerm, beforeTerm, error, loading } = this.state\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        beforeTerm={beforeTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      ></SearchPresenter>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport Helmet from \"react-helmet\"\nimport Loader from \"Components/Loader\"\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  align-items: flex-start;\n`\n\nconst Cover = styled.div`\n  width: 40%;\n  height: 80%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: contain;\n  background-repeat: no-repeat;\n`\n\nconst Data = styled.div`\n  width: 60%;\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`\n\nconst ItemContainer = styled.div``\n\nconst Item = styled.span``\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`\n\nconst Overview = styled.p`\n  margin-top: 20px;\n  width: 70%;\n  opacity: 0.7;\n  line-height: 1.5;\n`\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: -1;\n`\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Detail | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{`${\n          result.original_title ? result.original_title : result.original_name\n        } | Nomflix`}</title>\n      </Helmet>\n      <Backdrop\n        bgImage={\n          result.backdrop_path ? `https://image.tmdb.org/t/p/original${result.backdrop_path}` : null\n        }\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : \"http://www.etyellowpages.com/images/cinema/NoPoster.jpg\"\n          }\n        />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>{result.release_date ? result.release_date : result.first_air_date}</Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime\n                ? result.runtime\n                : result.episode_run_time && result.episode_run_time[0]}{\" \"}\n              min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, idx) =>\n                  idx + 1 === result.genres.length ? (\n                    <span key={idx}>{genre.name}</span>\n                  ) : (\n                    <span key={idx}>{`${genre.name} / `}</span>\n                  )\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  )\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default DetailPresenter\n","import DetailContainer from \"./DetailContainer\"\n\nexport default DetailContainer\n","import React from \"react\"\nimport DetailPresenter from \"./DetailPresenter\"\nimport { movieApi, tvApi } from \"api\"\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      location: { pathname }\n    } = props\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props\n    const { isMovie } = this.state\n    const parsedId = parseInt(id)\n    if (isNaN(parsedId)) {\n      return push(\"/\")\n    }\n    let result = null\n    try {\n      if (isMovie) {\n        ;({ data: result } = await movieApi.movieDetail(parsedId))\n      } else {\n        ;({ data: result } = await tvApi.showDetail(parsedId))\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" })\n    } finally {\n      this.setState({ loading: false, result })\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state\n    return <DetailPresenter result={result} error={error} loading={loading} />\n  }\n}\n","import React from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 1);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  z-index: 1;\n`\n\nconst List = styled.ul`\n  display: flex;\n`\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  border-bottom: 5px solid ${props => (props.current ? \"#1abc9c\" : \"transparent\")};\n`\n\nconst SLink = styled(Link)`\n  text-decoration: none;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport default withRouter(({ location: { pathname } }) => (\n  <SHeader>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </SHeader>\n))\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\"\nimport Home from \"Routes/Home\"\nimport TV from \"Routes/TV\"\nimport Search from \"Routes/Search\"\nimport Detail from \"Routes/Detail\"\nimport Header from \"Components/Header\"\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n)\n","import { createGlobalStyle } from \"styled-components\"\nimport reset from \"styled-reset\"\nconst globalStyles = createGlobalStyle`\n    ${reset}\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        margin-top: 50px;\n    }\n`\n\nexport default globalStyles\n","import React, { Fragment } from \"react\"\nimport Router from \"Components/Router\"\nimport GlobalStyles from \"Components/GlobalStyles\"\n\nfunction App() {\n  return (\n    <Fragment>\n      <Router />\n      <GlobalStyles />\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"Components/App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}